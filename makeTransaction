#! /bin/bash
acc_no=$(pwd | cut -d/ -f3 | grep -o '....$')
cur_bal=$(cat ./Current_Balance.txt)
var=0.0
read -p "Do you want to withdraw[w] or deposit[d]?" ques
if [[ "$ques" == "w" ]]; then
	while :
	do
		read -p "How much do you want to withdraw?(Enter non number to quit)" ans
		if [[ -n ${ans//[0-9]/} ]]; then
    		exit 0
    	else
    		future_bal=$(echo "$cur_bal-$ans" | bc -l)
    		if (( $(echo "$future_bal >= $var" | bc -l) )); then
    			chmod 600 Current_Balance.txt
    			chmod 600 Transaction_History.txt
    			echo $future_bal>./Current_Balance.txt
    			printf -v date_time '%(%Y-%m-%d %H:%M:%S)T\n' -1
    			printf "$acc_no -$ans $date_time" >> ./Transaction_History.txt
    			chmod 400 Current_Balance.txt
    			chmod 400 Transaction_History.txt
    			exit 0
    		else
				echo "Balance insufficient for tranfer. Enter new amount."
				continue
    		fi
		fi
	done
elif [[ "$ques" == "d" ]]; then
	read -p "How much do you want to deposit?(Enter non number to quit)" ans_
	if [[ -n ${ans//[0-9]/} ]]; then
		exit 0
	else 
		chmod 600 Current_Balance.txt
    	chmod 600 Transaction_History.txt
		echo $(awk "BEGIN {printf \"%.2f\",${cur_bal}+${ans_}}")>./Current_Balance.txt
		printf -v date_time '%(%Y-%m-%d %H:%M:%S)T\n' -1
		printf "$acc_no +$ans_ $date_time" >> ./Transaction_History.txt
		chmod 400 Current_Balance.txt
    	chmod 400 Transaction_History.txt
		exit 0
	fi
else
	exit
fi

	
	
